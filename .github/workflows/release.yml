name: Release

on:
  push:
    tags: ["v*"]
    branches: ["dev"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [amd64, arm64]
        include:
          - os: ubuntu-latest
            kernel: linux
            suffix: .tar.gz

          - os: windows-latest
            kernel: windows
            outputSuffix: .exe
            suffix: .zip

          - os: macos-latest
            kernel: darwin
            suffix: .zip

    steps:
      - uses: actions/checkout@v3

      - name: Setting up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
          check-latest: true

      - name: Build
        env:
          GOARCH: ${{ matrix.arch }}
#          OUTPUT: green-${{ matrix.kernel }}-${{ matrix.arch }}${{ matrix.outputSuffix}}
        run: go build
#        run: |
#          [[ ${{ matrix.kernel }} == "windows" ]] \
#          && go build -o $OUTPUT.exe \
#          || go build -o $OUTPUT

      - name: Compress && Remove
        env:
          TARGET: green-${{ matrix.kernel }}-${{ matrix.arch }}${{ matrix.suffix}}
          OUTPUT: git-green${{ matrix.outputSuffix }}
#          OUTPUT: green-${{ matrix.kernel }}-${{ matrix.arch }}${{ matrix.outputSuffix}}
        run: tar${{ matrix.outputSuffix }} -acf $TARGET $OUTPUT && rm $OUTPUT
#        run: |
#          [[ ${{ matrix.kernel }} == "windows" ]] && tar -acf $TARGET.zip    $TARGET.exe  && rm $TARGET.exe
#          [[ ${{ matrix.kernel }} == "darwin"  ]] && tar -acf $TARGET.zip    $TARGET      && rm $TARGET
#          [[ ${{ matrix.kernel }} == "linux"   ]] && tar -zcf $TARGET.tar.gz $TARGET      && rm $TARGET

      - name: Create folder and rename
        run: |
          mkdir release
          mv green-* release/

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: release
          path: release

      - name: Upload binaries to release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: release/${{ matrix.os }}-${{ matrix.arch }}
          tag: ${{ github.ref }}
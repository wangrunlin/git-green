name: Release

on:
  push:
    tags: ["v*"]
    branches: ["dev"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64]

    steps:
      - uses: actions/checkout@v3

      - name: Setting up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
          check-latest: true

      - name: Create release folder
      - run: |
        [ -d release ] && echo 'release is exist!' || (echo 'create release!'; mkdir release)

      - name: Build
        env:
          CGO_ENABLED: 0
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          OUTPUT: green-${{ matrix.os }}-${{ matrix.arch }}
        run: |
          [[ ${{ matrix.os }} == "windows" ]] \
          && go build -o $OUTPUT.exe \
          || go build -o $OUTPUT

      - name: Compress && Remove
        env: 
          TARGET: green-${{ matrix.os }}-${{ matrix.arch }}
        run: |
          [[ ${{ matrix.os }} == "windows" ]] && tar -acf release/$TARGET.zip    $TARGET.exe  && rm $TARGET.exe
          [[ ${{ matrix.os }} == "darwin"  ]] && tar -acf release/$TARGET.zip    $TARGET      && rm $TARGET
          [[ ${{ matrix.os }} == "linux"   ]] && tar -zcf release/$TARGET.tar.gz $TARGET      && rm $TARGET

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: release
          path: release

      - name: Upload binaries to release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: release/${{ matrix.os }}-${{ matrix.arch }}
          tag: ${{ github.ref }}